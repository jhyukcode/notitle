/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2025-03-21 06:24:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jsp015_005fjs_005fcontrol_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>DBDBIG</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<div class=\"p-3 bg-primary text-white \">\r\n");
      out.write("  <h1>007. CONTROL</h1>\r\n");
      out.write("  <ol>\r\n");
      out.write("    <li>IF</li>\r\n");
      out.write("    <li>SWITCH</li>\r\n");
      out.write("    <li>FOR/WHILE/DO WHILE</li>\r\n");
      out.write("  </ol>\r\n");
      out.write("</div>\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<div class=\"container card  my-3\">\r\n");
      out.write("  <h3  class=\"card-header\">007. CONTROL - Step1. IF</h3>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("    <h4>Step1. IF</h4>\r\n");
      out.write("    <script>\r\n");
      out.write("      // ìììì¹\r\n");
      out.write("      /*\r\n");
      out.write("        if(ì¡°ê±´) {  ì¡°ê±´ì´ ë§ì¼ë©´ true }\r\n");
      out.write("        else{   ì¡°ê±´ì´ ë¤ë¥´ë©´ false }\r\n");
      out.write("      */ \r\n");
      out.write("		document.write(\"ì ë¦¬1. ì¶ë ¥\");\r\n");
      out.write("		document.write(\"<p>íê³ ì¶ìë§ </p>\");\r\n");
      out.write("		consoloe.log(\"ìë ìë°ì¤í¬ë¦½í¸\");\r\n");
      out.write("		\r\n");
      out.write("		// 2. var let const\r\n");
      out.write("		// ë°íìë³´ë¤ ë¨¼ì  ì¤í - í¸ì´ì¤í ( var, function, class..)\r\n");
      out.write("		// var - ì ì­ë³ì\r\n");
      out.write("		// let - ì§ì­ë³ì ( ë³ìì¤ë³µ ì ì¸ë¶ê° )\r\n");
      out.write("		//const - ìì\r\n");
      out.write("		document.write(\"ì ë¦¬2. var, let, const\");\r\n");
      out.write("		\r\n");
      out.write("		// 3. ìë£í\r\n");
      out.write("		document.write(\"ì ë¦¬3. ìë£í\");\r\n");
      out.write("		let  d1; console.log(d1); // undefined\r\n");
      out.write("		d1=10; d1=3.14; d1=\"abc\"; d1=true; d1={\"sally\",3,7.8}; d1={};\r\n");
      out.write("		d1=function(){};\r\n");
      out.write("		\r\n");
      out.write("		test3 = 10;\r\n");
      out.write("		console.log(data1+\"10\"); // ìíë ê²°ê³¼ : 20\r\n");
      out.write("		console.log(typeof(test3)+typeof(\"10\")); // number - string\r\n");
      out.write("		console.log(test3+Number(\"10\")); // number - number\r\n");
      out.write("										// Number ë¬¸ìì´ì ì«ìë¡\r\n");
      out.write("    </script>\r\n");
      out.write("  </div>\r\n");
      out.write("  <!--     -->\r\n");
      out.write("  <!--     -->\r\n");
      out.write("  <hr/>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("    <h4>EX</h4>\r\n");
      out.write("    <pre>\r\n");
      out.write("      íê· ì ìë ¥íì¸ì __ìë ¥ë°ê¸°\r\n");
      out.write("      ë§ì½ íê· ì´ 60ì  ì´ì(60ì í¬í¨)ì´ë¼ë©´ í©ê²©, ìëë©´ ë¶í©ê²© ì¶ë ¥\r\n");
      out.write("    </pre>\r\n");
      out.write("    <input type=\"button\" value=\"ex1\"  id=\"ex1\"  title=\"ë²í¼ì í´ë¦­íì¸ì\" class=\"btn btn-success\"      />\r\n");
      out.write("    <script>\r\n");
      out.write("  // ìììì¹  \r\n");
      out.write("    </script>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<div class=\"container card  my-3\">\r\n");
      out.write("  <h3  class=\"card-header\">007. CONTROL - Step2. SWITCH</h3>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("    <h4>Step2. SWITCH</h4>\r\n");
      out.write("    <script>\r\n");
      out.write("    /*\r\n");
      out.write("    swtich(  ì²ë¦¬íê³  ì¶ì ëì    ){\r\n");
      out.write("        case ëìììí:    ì²ë¦¬;  break;\r\n");
      out.write("        case ëìììí:    ì²ë¦¬;  break;\r\n");
      out.write("        case ëìììí:    ì²ë¦¬;  break;\r\n");
      out.write("        default : ê¸°ë³¸ì²ë¦¬\r\n");
      out.write("    } */\r\n");
      out.write("\r\n");
      out.write("    // ìììì¹\r\n");
      out.write("   \r\n");
      out.write("    </script>\r\n");
      out.write("  </div>\r\n");
      out.write("  <!--     -->\r\n");
      out.write("  <!--     -->\r\n");
      out.write("  <hr/>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("    <h4>EX</h4>\r\n");
      out.write("    <pre>\r\n");
      out.write("      4,5,6 ì¤ì ìë ¥íì¸ì\r\n");
      out.write("      4ë² ìëì½  ,  5ë² êµ¬êµ¬ì½ , 6ë² ì¤ë ì ìë¦¼ì°½ì ëì°ìì¤.\r\n");
      out.write("    </pre>\r\n");
      out.write("    <input type=\"button\" value=\"switch1\"  id=\"switch1\"  title=\"ë²í¼ì í´ë¦­íì¸ì\" class=\"btn btn-success\"      />\r\n");
      out.write("    <script>\r\n");
      out.write("  // ìììì¹\r\n");
      out.write("  //1. switch \r\n");
      out.write("      // let  ice=5;\r\n");
      out.write("      // switch(ice){\r\n");
      out.write("      //   case 4 : alert('ìëì½'); break;\r\n");
      out.write("      //   case 5 : alert('êµ¬êµ¬ì½'); break;\r\n");
      out.write("      //   case 6 : alert('ì¤ë ì'); break;\r\n");
      out.write("      // }\r\n");
      out.write("  //2.  switch1    \r\n");
      out.write(" \r\n");
      out.write("    </script>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<!--                                    -->\r\n");
      out.write("<div class=\"container card  my-3\">\r\n");
      out.write("  <h3  class=\"card-header\">007. CONTROL - Step3. FOR/WHILE/DO WHILE</h3>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("    <h4>Step3. FOR/WHILE/DO WHILE</h4>\r\n");
      out.write("      <script>\r\n");
      out.write("      /* STEP1 for  - ë°ë³µíì ìë\r\n");
      out.write("         for(  ì´ê¸°ë¬¸; ì¡°ê±´ë¬¸; ì¦ê°ë¬¸ ){  }\r\n");
      out.write("      */\r\n");
      out.write("        \r\n");
      out.write("\r\n");
      out.write("        //1. ìì­ :  ë³µë¶-ë³µì¬íë íì¤ { ë°ë³µëë ìì­ }    -  {  console.log(1); }\r\n");
      out.write("        //2. ë³ì : {ë°ë³µ ìì­ - ë³ì}                      -  {  console.log(i); }    \r\n");
      out.write("        //3. í¨í´ : for(ìì; ì¢ë£; ë³í) \r\n");
      out.write("        \r\n");
      out.write("      // ìììì¹\r\n");
      out.write("      </script>\r\n");
      out.write("  </div>\r\n");
      out.write("  <!--     -->\r\n");
      out.write("  <!--     -->\r\n");
      out.write("  <hr/>\r\n");
      out.write("  <div class=\"card-body\">\r\n");
      out.write("    <h4>EX</h4>\r\n");
      out.write("    <pre>\r\n");
      out.write("    for \r\n");
      out.write("    Q1)		1	2	3	4	5\r\n");
      out.write("    Q2)		5	4	3	2	1\r\n");
      out.write("    Q3)		2	4	6 \r\n");
      out.write("    Q4)		hello1		hello2		hello3\r\n");
      out.write("    </pre>\r\n");
      out.write("    <script>\r\n");
      out.write("      // for, while, do while\r\n");
      out.write("      //A1)		1	2	3	4	5\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      //A2)		5	4	3	2	1\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("      //A3)		2	4	6\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      //A4)		hello1		hello2		hello3\r\n");
      out.write("       \r\n");
      out.write("    </script>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
