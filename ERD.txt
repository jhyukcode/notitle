1. ERD (Entity Relationship Diagram)
  ##1 정규화
    1) 관계형 데이터 모델 - 데이터 간 관계에 초점을 둔 모델
    2) 이상(Anomaly) : 공간낭비, 삽입 갱신 삭제 이상
    3) 정규화 : 이상을 제거하는 것
  ##2 핵심 구성 요소
    1) 개체(Entity) : 테이블, 개념의 정보 단위
    2) 속성(Attribute) : 테이블 열, 가장 작은 논리적 단위
    3) 관계(Relationship) : 외래키
    ex) 부서는 많은 사원을 가지고 있다
        *JPA
          emp(deptno) - dept(deptno)
          @ManyToOne    @OneToMany(mappedBy="dept")
  ##3 정규화 1NF-5NF (NF:Normal Form)
    1NF : 관계(최소형), 최소한 테이블, 중복되는 항목이 없어야 함
    
    QUESTION1)
    [BEFORE]
    CUSTOMERID   FIRSTNAME   SURNAME   TELEPHONE NUMBER
    -----------------------------------------------------
    123           ROBERT      INGRAM       555-861-2025
    -----------------------------------------------------
    456            JANE       WRIGHT       555-403-1659
                                           555-776-4100
    ------------------------------------------------------
    789            MARIA      FERNADES     555-808-9633
    ------------------------------------------------------
    123      ROBERT      INGRAM       555-861-2025
    456      JANE        WRIGHT       555-403-1659
    456      JANE        WRIGHT       555-776-4100
    789      MARIA      FERNADES      555-808-9633

    2NF : 부분함수 종속제거 - 모든 속성이 기본키에 완전함수 종속
      > ~알면 ~를 알 수 있다 , X(결정자) -> Y(종속자)
        ID를 알면 이름 정보를 알 수 있다 
      CUSTOMERID   FIRSTNAME   SURNAME              CUSTOMERID  TELEPHONE
      ---------------------------------             ---------------------------------
      123           ROBERT      INGRAM              123        555-861-2025
      ---------------------------------             ---------------------------------
      456            JANE       WRIGHT              456        555-403-1659
      ---------------------------------                        555-776-4100
      789            MARIA      FERNADES            ---------------------------------
      ---------------------------------             789        555-808-9633
                                                    ---------------------------------

    1. STD_ID, 과목 > 성적
    2. STD_ID > PROFESSOR
    3. STD_ID > 학부
    4. PROFESSOR > 학부
    5. 

    3NF : 이행함수 종속제거 .befor) x→y→z .aftr) x→Y / Y→Z
          다른 후보키에 의존하지 않음
    BCNF : 모든 결정자 후보키
    4NF : 다치종속
          - 게시판 / 해시태그
          - 교수2 / 교재2
    5NF : 조인종속
          - 중간테이블
          - 다: 다 관계
        게시판                                  해시코드
      1 FIRST       #GOOD #HAPPY #BEER        1 GOOD
      2 SECOND      #GOOD #BEER               2 HAPPY
      3 THIRD       #GOOD #SAD                3 BEER
      4 FOURTH      #GOOD #SAD                4 SAD

      게시판      게시판해시코드      해시코드
      1           1   1             1.GOOD
                  1   2             2.HAPPY
                  1   3             3.BEER
      2           2   1
                  2   3

    ex) 하나의 A는 하나의 B로 구성되어 있다 1:1
      홍길동 ┼─┼ 목숨
      홍길동 ┼─┼ 주민증

    ex) 하나의 A는 여러 B로 구성되어 있다 1:다
      학과는 많은 교수를 가질 수 있다
<<테이블>>
    학생(Student)
        학번(std_id), 성명(std_name), 키(height), 학과코드(dept_id)
        학과는 많은 학생을 가진다 1:다
        
    학과(Department)
        학과코드(dept_id), 학과명(dept_name)
        학과는 여러 교수를 가진다 1:다

    교수(Professor)
        교수코드(prof_id), 교수명(prof_name), 학과코드(dept_id)
        교수는 여러 과목을 가르칠 수 있다 1:다
        과목은 강의하는 교수 한 명이 지정될 수 있다

    개설과목(Course)
        과목코드(course_id), 과목명(course_name), 교수코드(prof_id),
        시작일(start_date), 종료일(end_date)
        과목은 수강하는 많은 학생을 가진다
        학생은 많은 과목을 수강할 수 있다

    수강(std_Course)
        학번(std_id), 과목코드(course_id)

        Course      ∈  StudentCourse    ∋Student
        course_id       std_id                std_id
        course_name     courde_id             std_name
        end_date                              height
        start_date                            dept_id
        prof_id