1. CLASS
  (1) 자바의 저장 단위
    - 변수 < 배열 < 클래스명
  (2) 객체의 특징
    - 부품객체
    - 상태(멤버변수)와 행위(멤버함수)를 갖는다

  OOP란??
    - 객체	지향	프로그래밍
    - Object Oriented Programming
    - 클래스(부품객체)를 조립해서 완성해가는 프로그램
  CLASS vs INSTANCE
    - 클래스(설계도) 틀로 여러 개의 객체(인스턴스)들을 만들 수 있음
    - 붕어빵 기계(설계도) --> 붕어빵들(객체)
      인스턴스화(heap:실제 만들었는지 확인), 인스턴스 : 각각의 특징
    - 클래스(부품객체) 특징에 맞게 코딩
    - 상태(멤버변수)와 행위(멤버함수)

2. 생성자 
  (1) 생성자
    - new 연산자에 의해 호출 [초기화] 담당
  (2) 기본 생성자 (디폴트 생성자)
    - 모든 클래스에 생성자가 반드시 존재
    - 생성자 선언을 생략 시 컴파일러가 자동으로 기본 생성자를 추가
    - 개발자가 선언 시 컴파일러가 자동 생성 취소

3. 생성자 형식
  class A{
    public A(){}    기본생성자
    public A(String name){}   파라미터 알규먼트가 있는 생성자
  }
  (1) 리턴값 없음 >  리턴값 메서드명(파라미터)
  (2) 클래스명과 동일
  (3) 기본 생성자를 생성해야 하는 경우 : 오버로딩, 상속